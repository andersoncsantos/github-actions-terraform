name: Teste GitHub Actions
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: terraform
          path: ${{ github.workspace }}//resources

  deploy-dev-infra:
    name: Deploy Infra Dev
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ github.workspace }}/resources

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1

    needs: build
    steps:
      - name: Download Terraform
        uses: actions/download-artifact@v2
        with:
          name: terraform
          path: ${{ github.workspace }}//resources

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false


      - name: Terraform Init
        id: init
        run: terraform init

      - name: Select Workspace
        id: select
        run: terraform workspace select dev

      - name: Terraform Validate
        id: validate
        run: terraform validate # -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan #-var-file workspaces_variables/dev.tfvars
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve #-var-file workspaces_variables/dev.tfvars -auto-approve

      # - name: Terraform Destroy
      #   run: terraform destroy -var-file workspaces_variables/dev.tfvars -auto-approve

  # deploy-qa-infra:
  #   name: Deploy Infra QA
  #   runs-on: ubuntu-latest

  #   defaults:
  #     run:
  #       working-directory: ${{ github.workspace }}/resources

  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_REGION: us-east-1

  #   needs: build
  #   steps:
  #     - name: Download Terraform
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: terraform
  #         path: ${{ github.workspace }}//resources

  #     - uses: hashicorp/setup-terraform@v1
  #       with:
  #         terraform_wrapper: false

  #     - name: Terraform Init
  #       id: init
  #       run: terraform init

  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate # -no-color

  #     # - name: Terraform Plan
  #     #   id: plan
  #     #   run: terraform plan -var-file workspaces_variables/qa.tfvars
  #     #   continue-on-error: true

  #     # - name: Terraform Apply
  #     #   run: terraform apply -var-file workspaces_variables/qa.tfvars -auto-approve
      
  #     - name: Terraform Destroy
  #       run: terraform destroy -var-file workspaces_variables/qa.tfvars -auto-approve

  # deploy-prod-infra:
  #   name: Deploy Infra Prod
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ${{ github.workspace }}/resources
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_REGION: us-east-1
  #   needs: build
  #   steps:
  #     - name: Download Terraform
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: terraform
  #         path: ${{ github.workspace }}//resources
  #     - uses: hashicorp/setup-terraform@v1
  #       with:
  #         terraform_wrapper: false
  #     - name: Terraform Init
  #       id: init
  #       run: terraform init
  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate # -no-color
  #     - name: Terraform Plan
  #       id: plan
  #       run: terraform plan -var-file workspaces_variables/prod.tfvars
  #       continue-on-error: true
  #     # - name: Terraform Apply
  #     #   run: terraform apply -var-file workspaces_variables/prod.tfvars -auto-approve
  #     - name: Terraform Destroy
  #       run: terraform destroy -var-file workspaces_variables/prod.tfvars -auto-approve
